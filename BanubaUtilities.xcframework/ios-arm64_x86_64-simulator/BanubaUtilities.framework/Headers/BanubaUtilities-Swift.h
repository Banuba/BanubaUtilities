#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef BANUBAUTILITIES_SWIFT_H
#define BANUBAUTILITIES_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import Photos;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BanubaUtilities",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class UIImage;
@class PHAssetCollection;

SWIFT_PROTOCOL("_TtP15BanubaUtilities10AlbumModel_")
@protocol AlbumModel
/// Album name
@property (nonatomic, copy) NSString * _Nullable name;
/// Album preview
@property (nonatomic, strong) UIImage * _Nullable preview;
/// Assosiated asset collection with album
@property (nonatomic, readonly, strong) PHAssetCollection * _Nonnull assetCollection;
@end


SWIFT_CLASS("_TtC15BanubaUtilities14AlbumViewModel")
@interface AlbumViewModel : NSObject <AlbumModel>
@property (nonatomic, readonly, strong) PHAssetCollection * _Nonnull assetCollection;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) UIImage * _Nullable preview;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TextButtonConfiguration;
@class BackButtonConfiguration;

/// The Albums configuration
SWIFT_CLASS("_TtC15BanubaUtilities19AlbumsConfiguration")
@interface AlbumsConfiguration : NSObject
/// TextButtonConfiguration setups title button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull textButton;
/// BackButtonConfiguration setups back button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButton;
- (nonnull instancetype)initWithTextButton:(TextButtonConfiguration * _Nonnull)textButton backButton:(BackButtonConfiguration * _Nonnull)backButton OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC15BanubaUtilities20AlbumsViewController")
@interface AlbumsViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP15BanubaUtilities28AlbumsViewControllerDelegate_")
@protocol AlbumsViewControllerDelegate
/// Tells delegate object about selection the new album
- (void)albumsViewController:(AlbumsViewController * _Nonnull)controller didSelect:(id <AlbumModel> _Nonnull)album;
/// Tells delegate object about close action
- (void)albumsViewControllerDidClose:(AlbumsViewController * _Nonnull)controller;
@end

@class NSNumber;
@class UIColor;
@class UIFont;

/// The Alert view configuration
SWIFT_CLASS("_TtC15BanubaUtilities22AlertViewConfiguration")
@interface AlertViewConfiguration : NSObject
/// Container corner radius
@property (nonatomic) CGFloat cornerRadius;
/// Buttons’ radius
@property (nonatomic) CGFloat buttonRadius;
/// Refuse button background color
@property (nonatomic, strong) UIColor * _Nonnull refuseButtonBackgroundColor;
/// Refuse button text color
@property (nonatomic, strong) UIColor * _Nonnull refuseButtonTextColor;
/// Agree button background color
@property (nonatomic, strong) UIColor * _Nonnull agreeButtonBackgroundColor;
/// Agree button text color
@property (nonatomic, strong) UIColor * _Nonnull agreeButtonTextColor;
/// Main title aligment
@property (nonatomic) NSTextAlignment titleAligment;
/// Main title font
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
/// Buttons’ font
@property (nonatomic, strong) UIFont * _Nonnull buttonsFont;
- (nonnull instancetype)initWithCornerRadius:(CGFloat)cornerRadius buttonRadius:(CGFloat)buttonRadius refuseButtonBackgroundColor:(UIColor * _Nonnull)refuseButtonBackgroundColor refuseButtonTextColor:(UIColor * _Nonnull)refuseButtonTextColor agreeButtonBackgroundColor:(UIColor * _Nonnull)agreeButtonBackgroundColor agreeButtonTextColor:(UIColor * _Nonnull)agreeButtonTextColor titleAligment:(NSTextAlignment)titleAligment titleFont:(UIFont * _Nonnull)titleFont buttonsFont:(UIFont * _Nonnull)buttonsFont OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15BanubaUtilities19AlertViewController")
@interface AlertViewController : UIViewController
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_PROTOCOL("_TtP15BanubaUtilities14AnimatableView_")
@protocol AnimatableView
- (void)startWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)stop;
@end

@protocol ImageConfigurationProtocol;
enum BackButtonConfigurationPosition : NSInteger;

/// The back button configuration.
SWIFT_CLASS("_TtC15BanubaUtilities23BackButtonConfiguration")
@interface BackButtonConfiguration : NSObject
/// The default button state image configuration.
@property (nonatomic, strong) id <ImageConfigurationProtocol> _Nonnull imageConfiguration;
/// The selected button state image configuration.
@property (nonatomic, strong) id <ImageConfigurationProtocol> _Nullable selectedImageConfiguration;
/// The button position configuration.
@property (nonatomic) enum BackButtonConfigurationPosition position;
/// Initializes and returns the back button configuration object with specified configurations.
- (nonnull instancetype)initWithImageConfiguration:(id <ImageConfigurationProtocol> _Nonnull)imageConfiguration selectedImageConfiguration:(id <ImageConfigurationProtocol> _Nullable)selectedImageConfiguration position:(enum BackButtonConfigurationPosition)position OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, BackButtonConfigurationPosition, closed) {
  BackButtonConfigurationPositionLeft = 0,
  BackButtonConfigurationPositionRight = 1,
};


/// The background configuration.
SWIFT_CLASS("_TtC15BanubaUtilities23BackgroundConfiguration")
@interface BackgroundConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVURLAsset;
enum GalleryItemType : NSInteger;

SWIFT_PROTOCOL("_TtP15BanubaUtilities11GalleryItem_")
@protocol GalleryItem <NSObject>
/// Video representation url asset
@property (nonatomic, readonly, strong) AVURLAsset * _Nullable urlAsset;
/// Preview for gallery item
@property (nonatomic, strong) UIImage * _Nullable preview;
/// GalleryItem duration
@property (nonatomic, readonly) NSTimeInterval duration;
/// Type can be video, photo or unknown
@property (nonatomic, readonly) enum GalleryItemType type;
/// Requests preview for displaying in gallery list
- (void)requestPreviewWithSize:(CGSize)size handler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
/// Requests photo with desired size
- (void)requestPhotoWithSize:(CGSize)size progressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))handler;
/// Requests video url asset
- (void)requestAVURLAssetWithProgressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(AVURLAsset * _Nullable, NSError * _Nullable))handler;
@end


SWIFT_CLASS("_TtC15BanubaUtilities17BanubaGalleryItem")
@interface BanubaGalleryItem : NSObject <GalleryItem>
@property (nonatomic, strong) UIImage * _Nullable preview;
@property (nonatomic, readonly) NSTimeInterval duration;
@property (nonatomic, readonly, strong) AVURLAsset * _Nullable urlAsset;
@property (nonatomic, readonly) enum GalleryItemType type;
- (void)requestAVURLAssetWithProgressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(AVURLAsset * _Nullable, NSError * _Nullable))handler;
- (void)requestPreviewWithSize:(CGSize)size handler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
- (void)requestPhotoWithSize:(CGSize)size progressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))handler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BanubaGalleryItem (SWIFT_EXTENSION(BanubaUtilities))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL("_TtP15BanubaUtilities22ProgressAnimatableView_")
@protocol ProgressAnimatableView
@property (nonatomic) float progress;
@end


SWIFT_CLASS("_TtC15BanubaUtilities20CircularProgressView")
@interface CircularProgressView : UIView <ProgressAnimatableView>
@property (nonatomic) float progress;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP15BanubaUtilities28CountdownTimerAnimatableView_")
@protocol CountdownTimerAnimatableView <AnimatableView>
@property (nonatomic) NSInteger countdownDigit;
@end

enum VideoResolution : NSInteger;
@class GalleryItemConfiguration;
@protocol ImageButtonConfigurationProtocol;
@class SaveButtonConfiguration;
@class TextConfiguration;
@class GalleryLayoutConfiguration;

/// The Gallery configuration
SWIFT_CLASS("_TtC15BanubaUtilities20GalleryConfiguration")
@interface GalleryConfiguration : NSObject
/// VideoResolution setups gallery options for fetching video
@property (nonatomic) enum VideoResolution videoResolution;
/// GalleryItemConfiguration setups gallery item style for collection view cell
@property (nonatomic, strong) GalleryItemConfiguration * _Nonnull galleryItemConfiguration;
/// ImageButtonConfiguration setups close button style
@property (nonatomic, strong) id <ImageButtonConfigurationProtocol> _Nonnull closeButtonConfiguration;
/// TextButtonConfiguration setups album button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull albumButtonConfiguration;
/// SaveButtonConfiguration setups next button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull nextButtonConfiguration;
/// SaveButtonConfiguration setups drafts button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull draftsButtonConfiguration;
/// TextConfiguration setups ‘no photos’ and ‘no videos’ label title style
@property (nonatomic, strong) TextConfiguration * _Nonnull noItemsLabelConfiguration;
/// GalleryLayoutConfiguration setups collection view layout for gallery items
@property (nonatomic, strong) GalleryLayoutConfiguration * _Nonnull layoutConfiguration;
/// Top bar blur color
@property (nonatomic, strong) UIColor * _Nonnull topBarBlurColor;
/// ImageButtonConfiguration setups clear selection button style
@property (nonatomic, strong) id <ImageButtonConfigurationProtocol> _Nonnull clearSelectionButtonConfiguration;
/// TextButtonConfiguration setups gallery type buttons’ style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull galleryTypeButton;
/// Color for underline view
@property (nonatomic, strong) UIColor * _Nonnull galleryTypeUnderlineColor;
/// Should use animation for photo sequences
@property (nonatomic) BOOL isPhotoSequenceAnimationEnabled;
/// TextConfiguration setups import items label style
@property (nonatomic, strong) TextConfiguration * _Nonnull importItemsLabelConfiguration;
/// BackgroundConfiguration setups configuration of bottom view
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull bottomViewConfiguration;
/// Setups drafts button visibility. VE SDK setups this field to true for picker mode displaying and etc.
@property (nonatomic) BOOL isDraftsHidden;
/// Setup visible tabs for gallery. 0 - Video. 1 - Photo.
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull visibleTabsInGallery;
- (nonnull instancetype)initWithVideoResolution:(enum VideoResolution)videoResolution galleryItemConfiguration:(GalleryItemConfiguration * _Nonnull)galleryItemConfiguration closeButtonConfiguration:(id <ImageButtonConfigurationProtocol> _Nonnull)closeButtonConfiguration albumButtonConfiguration:(TextButtonConfiguration * _Nonnull)albumButtonConfiguration nextButtonConfiguration:(SaveButtonConfiguration * _Nonnull)nextButtonConfiguration draftsButtonConfiguration:(SaveButtonConfiguration * _Nonnull)draftsButtonConfiguration noItemsLabelConfiguration:(TextConfiguration * _Nonnull)noItemsLabelConfiguration layoutConfiguration:(GalleryLayoutConfiguration * _Nonnull)layoutConfiguration topBarBlurColor:(UIColor * _Nonnull)topBarBlurColor clearSelectionButtonConfiguration:(id <ImageButtonConfigurationProtocol> _Nonnull)clearSelectionButtonConfiguration galleryTypeButton:(TextButtonConfiguration * _Nonnull)galleryTypeButton galleryTypeUnderlineColor:(UIColor * _Nonnull)galleryTypeUnderlineColor isPhotoSequenceAnimationEnabled:(BOOL)isPhotoSequenceAnimationEnabled importItemsLabelConfiguration:(TextConfiguration * _Nonnull)importItemsLabelConfiguration bottomViewConfiguration:(BackgroundConfiguration * _Nonnull)bottomViewConfiguration isDraftsHidden:(BOOL)isDraftsHidden visibleTabsInGallery:(NSArray<NSNumber *> * _Nonnull)visibleTabsInGallery OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class SmallActivityIndicatorConfiguration;

/// The Gallery item configuration
SWIFT_CLASS("_TtC15BanubaUtilities24GalleryItemConfiguration")
@interface GalleryItemConfiguration : NSObject
/// Order number background color
@property (nonatomic, strong) UIColor * _Nonnull orderNumberBackgroudColor;
/// Order number title color
@property (nonatomic, strong) UIColor * _Nonnull orderNumberTitleColor;
/// Order number title font
@property (nonatomic, strong) UIFont * _Nonnull orderNumberTitleFont;
/// Image name setups  image for selection indicator
@property (nonatomic, copy) NSString * _Nonnull backgroundSelectionIndicatorImageName;
/// Is selection indicator is hidden
@property (nonatomic) BOOL hideSelectionIndicatorBySelection;
/// TextConfiguration setups duration label configuration
@property (nonatomic, strong) TextConfiguration * _Nonnull durationLabelConfiguration;
/// Duration label background color
@property (nonatomic, strong) UIColor * _Nonnull durationLabelBackgroundColor;
/// SmallActivityIndicatorConfiguration setups activity indicator style
@property (nonatomic, strong) SmallActivityIndicatorConfiguration * _Nonnull activityIndicatorConfiguration;
/// Container’s corner radius
@property (nonatomic) CGFloat cornerRadius;
- (nonnull instancetype)initWithOrderNumberBackgroudColor:(UIColor * _Nonnull)orderNumberBackgroudColor orderNumberTitleColor:(UIColor * _Nonnull)orderNumberTitleColor orderNumberTitleFont:(UIFont * _Nonnull)orderNumberTitleFont backgroundSelectionIndicatorImageName:(NSString * _Nonnull)backgroundSelectionIndicatorImageName hideSelectionIndicatorBySelection:(BOOL)hideSelectionIndicatorBySelection durationLabelConfiguration:(TextConfiguration * _Nonnull)durationLabelConfiguration durationLabelBackgroundColor:(UIColor * _Nonnull)durationLabelBackgroundColor activityIndicatorConfiguration:(SmallActivityIndicatorConfiguration * _Nonnull)activityIndicatorConfiguration cornerRadius:(CGFloat)cornerRadius OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GalleryItemType, open) {
  GalleryItemTypePhoto = 0,
  GalleryItemTypeVideo = 1,
  GalleryItemTypeUnknown = 2,
};


/// The Gallery layout configuration
SWIFT_CLASS("_TtC15BanubaUtilities26GalleryLayoutConfiguration")
@interface GalleryLayoutConfiguration : NSObject
/// Number of items per row
@property (nonatomic) NSInteger numberOfItemsPerRow;
/// Spacing between items
@property (nonatomic) CGFloat interitemSpacing;
/// Edge insets
@property (nonatomic) UIEdgeInsets edgeInsets;
- (nonnull instancetype)initWithNumberOfItemsPerRow:(NSInteger)numberOfItemsPerRow interitemSpacing:(CGFloat)interitemSpacing edgeInsets:(UIEdgeInsets)edgeInsets OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15BanubaUtilities14GalleryManager")
@interface GalleryManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PHChange;

@interface GalleryManager (SWIFT_EXTENSION(BanubaUtilities)) <PHPhotoLibraryChangeObserver>
- (void)photoLibraryDidChange:(PHChange * _Nonnull)changeInstance;
@end


typedef SWIFT_ENUM(NSInteger, GalleryMediaType, open) {
  GalleryMediaTypeVideo = 0,
  GalleryMediaTypePhoto = 1,
};


/// Setups gallery selection behaviour
SWIFT_CLASS("_TtC15BanubaUtilities25GallerySelectionBehaviour")
@interface GallerySelectionBehaviour : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15BanubaUtilities21GalleryViewController")
@interface GalleryViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP15BanubaUtilities29GalleryViewControllerDelegate_")
@protocol GalleryViewControllerDelegate
/// Tells delegate object about starting asynchronous operations at the gallery.
/// BanubaVideoEditorSDK showing full-screen spinner by this event. It can help to prevent unnecessary actions from a user.
- (void)galleryViewControllerDidStartExport:(GalleryViewController * _Nonnull)controller;
/// Tells delegate object about finishing asynchronous operations at the gallery
- (void)galleryViewControllerDidEndExport:(GalleryViewController * _Nonnull)controller;
/// Tells delegate object about the closing gallery.
- (void)galleryViewControllerDidClose:(GalleryViewController * _Nonnull)controller;
/// Tells delegate object about completion picking gallery items.
- (void)galleryViewControllerDone:(GalleryViewController * _Nonnull)controller withGalleryItems:(NSArray<id <GalleryItem>> * _Nonnull)items;
/// Tells delegate object that a user request changing current album.
- (void)galleryViewControllerDidChangeAlbum:(GalleryViewController * _Nonnull)controller currentAlbum:(id <AlbumModel> _Nullable)currentAlbum;
/// Tells delegate object that he should present message.
/// In BanubaVideoEditorSDK it presents popup message.
- (void)galleryViewController:(GalleryViewController * _Nonnull)controller presentMessage:(NSString * _Nonnull)message;
/// Tells delegate object about the opening Drafts
- (void)galleryViewControllerDidTapDrafts:(GalleryViewController * _Nonnull)controller;
@end


SWIFT_PROTOCOL("_TtP15BanubaUtilities28GalleryViewControllerFactory_")
@protocol GalleryViewControllerFactory <NSObject>
/// Creates GalleryViewController
- (GalleryViewController * _Nonnull)makeGalleryViewControllerWithConfiguration:(GalleryConfiguration * _Nonnull)configuration selectionBehaviour:(GallerySelectionBehaviour * _Nonnull)selectionBehaviour SWIFT_WARN_UNUSED_RESULT;
/// Creates AlbumsViewController
- (AlbumsViewController * _Nonnull)makeAlbumsViewControllerWithConfiguration:(AlbumsConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtCC15BanubaUtilities35SmallActivityIndicatorConfiguration12GradientType")
@interface GradientType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class GradientColorConfiguration;

@interface GradientType (SWIFT_EXTENSION(BanubaUtilities))
+ (GradientType * _Nonnull)color:(GradientColorConfiguration * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (GradientType * _Nonnull)image:(id <ImageConfigurationProtocol> _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC15BanubaUtilities8HintView")
@interface HintView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end



/// The button with image configuration
SWIFT_PROTOCOL("_TtP15BanubaUtilities32ImageButtonConfigurationProtocol_")
@protocol ImageButtonConfigurationProtocol
/// The default image configuration
@property (nonatomic, strong) id <ImageConfigurationProtocol> _Nonnull imageConfiguration;
/// The selected image configuration
@property (nonatomic, strong) id <ImageConfigurationProtocol> _Nullable selectedImageConfiguration;
@end


/// The image configuration
SWIFT_PROTOCOL("_TtP15BanubaUtilities26ImageConfigurationProtocol_")
@protocol ImageConfigurationProtocol
@property (nonatomic, readonly, strong) UIImage * _Nullable image;
@end



/// The player control configuration.
SWIFT_CLASS("_TtC15BanubaUtilities26PlayerControlConfiguration")
@interface PlayerControlConfiguration : NSObject
/// The play button image name.
@property (nonatomic, copy) NSString * _Nonnull playButtonImageName;
/// The pause button image name.
@property (nonatomic, copy) NSString * _Nonnull pauseButtonImageName;
/// Initializes and returns the player control configuration object with specified configurations.
- (nonnull instancetype)initWithPlayButtonImageName:(NSString * _Nonnull)playButtonImageName pauseButtonImageName:(NSString * _Nonnull)pauseButtonImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The button configuration with rounging settings, text styling and background color configuration.
SWIFT_CLASS("_TtC15BanubaUtilities26RoundedButtonConfiguration")
@interface RoundedButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nullable textConfiguration;
/// The border width configuration.
@property (nonatomic) CGFloat borderWidth;
/// The border color configuration.
@property (nonatomic) CGColorRef _Nonnull borderColor;
/// The corner radius configuration
@property (nonatomic) CGFloat cornerRadius;
/// The background color configuration.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The button width.
/// Default is 30.0
@property (nonatomic) CGFloat width;
/// The button height.
/// Default is 70.0
@property (nonatomic) CGFloat height;
/// Initializes and returns the button configuration object with speicified fields configurations.
- (nonnull instancetype)initWithTextConfiguration:(TextConfiguration * _Nullable)textConfiguration cornerRadius:(CGFloat)cornerRadius backgroundColor:(UIColor * _Nonnull)backgroundColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nonnull)borderColor width:(CGFloat)width height:(CGFloat)height OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The save button configuration with text styling and more.
SWIFT_CLASS("_TtC15BanubaUtilities23SaveButtonConfiguration")
@interface SaveButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull textConfiguration;
/// The inactive button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull inactiveTextConfiguration;
/// The button text.
@property (nonatomic, copy) NSString * _Nonnull text;
/// The button width.
@property (nonatomic) CGFloat width;
/// The button height.
@property (nonatomic) CGFloat height;
/// The button corner radius.
@property (nonatomic) CGFloat cornerRadius;
/// The button background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The invactive button background color.
@property (nonatomic, strong) UIColor * _Nonnull inactiveBackgroundColor;
/// Initializes and returns the button configuration object with specified configurations.
- (nonnull instancetype)initWithTextConfiguration:(TextConfiguration * _Nonnull)textConfiguration inactiveTextConfiguration:(TextConfiguration * _Nonnull)inactiveTextConfiguration text:(NSString * _Nonnull)text width:(CGFloat)width height:(CGFloat)height cornerRadius:(CGFloat)cornerRadius backgroundColor:(UIColor * _Nonnull)backgroundColor inactiveBackgroundColor:(UIColor * _Nonnull)inactiveBackgroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIPresentationController;
@protocol UIViewControllerAnimatedTransitioning;
@protocol UIViewControllerInteractiveTransitioning;

SWIFT_CLASS("_TtC15BanubaUtilities26SlideInPresentationManager")
@interface SlideInPresentationManager : NSObject <UIViewControllerTransitioningDelegate>
- (nonnull instancetype)init;
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
@end


/// The activity indicator configuration.
SWIFT_CLASS("_TtC15BanubaUtilities35SmallActivityIndicatorConfiguration")
@interface SmallActivityIndicatorConfiguration : NSObject
/// The gradient type.
@property (nonatomic, strong) GradientType * _Nonnull gradientType;
/// The activity indicator line width.
@property (nonatomic) CGFloat activityLineWidth;
/// Initializes and returns the activity indicator configuration object with specified configurations.
- (nonnull instancetype)initWithGradientType:(GradientType * _Nonnull)gradientType activityLineWidth:(CGFloat)activityLineWidth OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// The gradient type.
typedef SWIFT_ENUM(NSInteger, GradientTypeAdapter, open) {
  GradientTypeAdapterColor = 0,
  GradientTypeAdapterImage = 1,
};



/// The gradient configuration.
SWIFT_CLASS("_TtCC15BanubaUtilities35SmallActivityIndicatorConfiguration26GradientColorConfiguration")
@interface GradientColorConfiguration : NSObject
/// The gradient angle.
@property (nonatomic) CGFloat angle;
/// The gradient colors.
@property (nonatomic, copy) NSArray<UIColor *> * _Nonnull colors;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The button configuration with text styling and text.
SWIFT_CLASS("_TtC15BanubaUtilities23TextButtonConfiguration")
@interface TextButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull style;
/// The button text.
@property (nonatomic, copy) NSString * _Nullable text;
/// Initializes and returns the button configuration object with text style and optional text.
- (nonnull instancetype)initWithStyle:(TextConfiguration * _Nonnull)style text:(NSString * _Nullable)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TextShadowConfiguration;

/// The text configuration
SWIFT_CLASS("_TtC15BanubaUtilities17TextConfiguration")
@interface TextConfiguration : NSObject
/// The kerning of the text.
/// Default is 0
@property (nonatomic) double kern;
/// The font of the text.
@property (nonatomic, strong) UIFont * _Nonnull font;
/// The color of the text.
@property (nonatomic, strong) UIColor * _Nonnull color;
/// The alignment of the text.
/// Default is .center
@property (nonatomic) NSTextAlignment alignment;
/// The optional text
@property (nonatomic, copy) NSString * _Nullable text;
/// The optional shadow
@property (nonatomic, strong) TextShadowConfiguration * _Nullable shadow;
/// Initializes and returns the text configuration object with speicified fields.
- (nonnull instancetype)initWithKern:(double)kern font:(UIFont * _Nonnull)font color:(UIColor * _Nonnull)color alignment:(NSTextAlignment)alignment text:(NSString * _Nullable)text shadow:(TextShadowConfiguration * _Nullable)shadow OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSShadow;

/// The shadow button configuration.
SWIFT_CLASS("_TtC15BanubaUtilities23TextShadowConfiguration")
@interface TextShadowConfiguration : NSObject
/// The shadow color configuration.
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
/// The shadowOffset configuration.
@property (nonatomic) CGSize shadowOffset;
/// The shadowBlurRadius configuration.
@property (nonatomic) CGFloat shadowBlurRadius;
/// Initializes and returns the shadow configuration.
- (nonnull instancetype)initWithShadowColor:(UIColor * _Nonnull)shadowColor shadowOffset:(CGSize)shadowOffset shadowBlurRadius:(CGFloat)shadowBlurRadius OBJC_DESIGNATED_INITIALIZER;
/// Apply the shadow configuration.
- (NSShadow * _Nonnull)shadow SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







SWIFT_CLASS("_TtC15BanubaUtilities28VideoEditorActivityIndicator")
@interface VideoEditorActivityIndicator : UIView
@property (nonatomic) CGRect bounds;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, VideoResolution, open) {
  VideoResolutionHd1280x720 = 0,
  VideoResolutionHd1920x1080 = 1,
  VideoResolutionMd960x540 = 2,
  VideoResolutionDefault854x480 = 3,
};


/// The video resolution configuration
SWIFT_CLASS("_TtC15BanubaUtilities28VideoResolutionConfiguration")
@interface VideoResolutionConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef BANUBAUTILITIES_SWIFT_H
#define BANUBAUTILITIES_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import Photos;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BanubaUtilities",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSString;
@class UIImage;
@class PHAssetCollection;

SWIFT_PROTOCOL("_TtP15BanubaUtilities10AlbumModel_")
@protocol AlbumModel
/// Album name
@property (nonatomic, copy) NSString * _Nullable name;
/// Album preview
@property (nonatomic, strong) UIImage * _Nullable preview;
/// Assosiated asset collection with album
@property (nonatomic, readonly, strong) PHAssetCollection * _Nonnull assetCollection;
@end


SWIFT_CLASS("_TtC15BanubaUtilities14AlbumViewModel")
@interface AlbumViewModel : NSObject <AlbumModel>
@property (nonatomic, readonly, strong) PHAssetCollection * _Nonnull assetCollection;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) UIImage * _Nullable preview;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TextButtonConfiguration;
@class BackButtonConfiguration;

/// The Albums configuration
SWIFT_CLASS("_TtC15BanubaUtilities19AlbumsConfiguration")
@interface AlbumsConfiguration : NSObject
/// TextButtonConfiguration setups title button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull textButton;
/// BackButtonConfiguration setups back button style
@property (nonatomic, strong) BackButtonConfiguration * _Nonnull backButton;
- (nonnull instancetype)initWithTextButton:(TextButtonConfiguration * _Nonnull)textButton backButton:(BackButtonConfiguration * _Nonnull)backButton OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC15BanubaUtilities20AlbumsViewController")
@interface AlbumsViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP15BanubaUtilities28AlbumsViewControllerDelegate_")
@protocol AlbumsViewControllerDelegate
/// Tells delegate object about selection the new album
- (void)albumsViewController:(AlbumsViewController * _Nonnull)controller didSelect:(id <AlbumModel> _Nonnull)album;
/// Tells delegate object about close action
- (void)albumsViewControllerDidClose:(AlbumsViewController * _Nonnull)controller;
@end

@class NSNumber;
@class UIColor;
@class UIFont;

/// The Alert view configuration
SWIFT_CLASS("_TtC15BanubaUtilities22AlertViewConfiguration")
@interface AlertViewConfiguration : NSObject
/// Container corner radius
@property (nonatomic) CGFloat cornerRadius;
/// Buttons’ radius
@property (nonatomic) CGFloat buttonRadius;
/// Refuse button background color
@property (nonatomic, strong) UIColor * _Nonnull refuseButtonBackgroundColor;
/// Refuse button text color
@property (nonatomic, strong) UIColor * _Nonnull refuseButtonTextColor;
/// Agree button background color
@property (nonatomic, strong) UIColor * _Nonnull agreeButtonBackgroundColor;
/// Agree button text color
@property (nonatomic, strong) UIColor * _Nonnull agreeButtonTextColor;
/// Main title aligment
@property (nonatomic) NSTextAlignment titleAligment;
/// Main title font
@property (nonatomic, strong) UIFont * _Nonnull titleFont;
/// Buttons’ font
@property (nonatomic, strong) UIFont * _Nonnull buttonsFont;
- (nonnull instancetype)initWithCornerRadius:(CGFloat)cornerRadius buttonRadius:(CGFloat)buttonRadius refuseButtonBackgroundColor:(UIColor * _Nonnull)refuseButtonBackgroundColor refuseButtonTextColor:(UIColor * _Nonnull)refuseButtonTextColor agreeButtonBackgroundColor:(UIColor * _Nonnull)agreeButtonBackgroundColor agreeButtonTextColor:(UIColor * _Nonnull)agreeButtonTextColor titleAligment:(NSTextAlignment)titleAligment titleFont:(UIFont * _Nonnull)titleFont buttonsFont:(UIFont * _Nonnull)buttonsFont OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15BanubaUtilities19AlertViewController")
@interface AlertViewController : UIViewController
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






SWIFT_PROTOCOL("_TtP15BanubaUtilities14AnimatableView_")
@protocol AnimatableView
- (void)startWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)stop;
@end

@protocol ImageConfigurationProtocol;
enum BackButtonConfigurationPosition : NSInteger;

/// The back button configuration.
SWIFT_CLASS("_TtC15BanubaUtilities23BackButtonConfiguration")
@interface BackButtonConfiguration : NSObject
/// The default button state image configuration.
@property (nonatomic, strong) id <ImageConfigurationProtocol> _Nonnull imageConfiguration;
/// The selected button state image configuration.
@property (nonatomic, strong) id <ImageConfigurationProtocol> _Nullable selectedImageConfiguration;
/// The button position configuration.
@property (nonatomic) enum BackButtonConfigurationPosition position;
/// Initializes and returns the back button configuration object with specified configurations.
- (nonnull instancetype)initWithImageConfiguration:(id <ImageConfigurationProtocol> _Nonnull)imageConfiguration selectedImageConfiguration:(id <ImageConfigurationProtocol> _Nullable)selectedImageConfiguration position:(enum BackButtonConfigurationPosition)position OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, BackButtonConfigurationPosition, closed) {
  BackButtonConfigurationPositionLeft = 0,
  BackButtonConfigurationPositionRight = 1,
};


/// The background configuration.
SWIFT_CLASS("_TtC15BanubaUtilities23BackgroundConfiguration")
@interface BackgroundConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class AVURLAsset;
enum GalleryItemType : NSInteger;

SWIFT_PROTOCOL("_TtP15BanubaUtilities11GalleryItem_")
@protocol GalleryItem <NSObject>
/// Video representation url asset
@property (nonatomic, readonly, strong) AVURLAsset * _Nullable urlAsset;
/// Preview for gallery item
@property (nonatomic, strong) UIImage * _Nullable preview;
/// GalleryItem duration
@property (nonatomic, readonly) NSTimeInterval duration;
/// Type can be video, photo or unknown
@property (nonatomic, readonly) enum GalleryItemType type;
/// Requests preview for displaying in gallery list
- (void)requestPreviewWithSize:(CGSize)size handler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
/// Requests photo with desired size
- (void)requestPhotoWithSize:(CGSize)size progressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))handler;
/// Requests video url asset
- (void)requestAVURLAssetWithProgressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(AVURLAsset * _Nullable, NSError * _Nullable))handler;
@end


SWIFT_CLASS("_TtC15BanubaUtilities17BanubaGalleryItem")
@interface BanubaGalleryItem : NSObject <GalleryItem>
@property (nonatomic, strong) UIImage * _Nullable preview;
@property (nonatomic, readonly) NSTimeInterval duration;
@property (nonatomic, readonly, strong) AVURLAsset * _Nullable urlAsset;
@property (nonatomic, readonly) enum GalleryItemType type;
- (void)requestAVURLAssetWithProgressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(AVURLAsset * _Nullable, NSError * _Nullable))handler;
- (void)requestPreviewWithSize:(CGSize)size handler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
- (void)requestPhotoWithSize:(CGSize)size progressHandler:(BOOL (^ _Nullable)(double))progressHandler handler:(void (^ _Nonnull)(UIImage * _Nullable, NSError * _Nullable))handler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface BanubaGalleryItem (SWIFT_EXTENSION(BanubaUtilities))
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_PROTOCOL("_TtP15BanubaUtilities22ProgressAnimatableView_")
@protocol ProgressAnimatableView
@property (nonatomic) float progress;
@end


SWIFT_CLASS("_TtC15BanubaUtilities20CircularProgressView")
@interface CircularProgressView : UIView <ProgressAnimatableView>
@property (nonatomic) float progress;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP15BanubaUtilities28CountdownTimerAnimatableView_")
@protocol CountdownTimerAnimatableView <AnimatableView>
@property (nonatomic) NSInteger countdownDigit;
@end

enum VideoResolution : NSInteger;
@class GalleryItemConfiguration;
@protocol ImageButtonConfigurationProtocol;
@class SaveButtonConfiguration;
@class TextConfiguration;
@class GalleryLayoutConfiguration;

/// The Gallery configuration
SWIFT_CLASS("_TtC15BanubaUtilities20GalleryConfiguration")
@interface GalleryConfiguration : NSObject
/// VideoResolution setups gallery options for fetching video
@property (nonatomic) enum VideoResolution videoResolution;
/// GalleryItemConfiguration setups gallery item style for collection view cell
@property (nonatomic, strong) GalleryItemConfiguration * _Nonnull galleryItemConfiguration;
/// ImageButtonConfiguration setups close button style
@property (nonatomic, strong) id <ImageButtonConfigurationProtocol> _Nonnull closeButtonConfiguration;
/// TextButtonConfiguration setups album button style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull albumButtonConfiguration;
/// SaveButtonConfiguration setups next button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull nextButtonConfiguration;
/// SaveButtonConfiguration setups drafts button style
@property (nonatomic, strong) SaveButtonConfiguration * _Nonnull draftsButtonConfiguration;
/// TextConfiguration setups ‘no photos’ and ‘no videos’ label title style
@property (nonatomic, strong) TextConfiguration * _Nonnull noItemsLabelConfiguration;
/// GalleryLayoutConfiguration setups collection view layout for gallery items
@property (nonatomic, strong) GalleryLayoutConfiguration * _Nonnull layoutConfiguration;
/// Top bar blur color
@property (nonatomic, strong) UIColor * _Nonnull topBarBlurColor;
/// ImageButtonConfiguration setups clear selection button style
@property (nonatomic, strong) id <ImageButtonConfigurationProtocol> _Nonnull clearSelectionButtonConfiguration;
/// TextButtonConfiguration setups gallery type buttons’ style
@property (nonatomic, strong) TextButtonConfiguration * _Nonnull galleryTypeButton;
/// Color for underline view
@property (nonatomic, strong) UIColor * _Nonnull galleryTypeUnderlineColor;
/// Should use animation for photo sequences
@property (nonatomic) BOOL isPhotoSequenceAnimationEnabled;
/// TextConfiguration setups import items label style
@property (nonatomic, strong) TextConfiguration * _Nonnull importItemsLabelConfiguration;
/// BackgroundConfiguration setups configuration of bottom view
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull bottomViewConfiguration;
/// Setups drafts button visibility. VE SDK setups this field to true for picker mode displaying and etc.
@property (nonatomic) BOOL isDraftsHidden;
/// Setup visible tabs for gallery. 0 - Video. 1 - Photo.
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull visibleTabsInGallery;
- (nonnull instancetype)initWithVideoResolution:(enum VideoResolution)videoResolution galleryItemConfiguration:(GalleryItemConfiguration * _Nonnull)galleryItemConfiguration closeButtonConfiguration:(id <ImageButtonConfigurationProtocol> _Nonnull)closeButtonConfiguration albumButtonConfiguration:(TextButtonConfiguration * _Nonnull)albumButtonConfiguration nextButtonConfiguration:(SaveButtonConfiguration * _Nonnull)nextButtonConfiguration draftsButtonConfiguration:(SaveButtonConfiguration * _Nonnull)draftsButtonConfiguration noItemsLabelConfiguration:(TextConfiguration * _Nonnull)noItemsLabelConfiguration layoutConfiguration:(GalleryLayoutConfiguration * _Nonnull)layoutConfiguration topBarBlurColor:(UIColor * _Nonnull)topBarBlurColor clearSelectionButtonConfiguration:(id <ImageButtonConfigurationProtocol> _Nonnull)clearSelectionButtonConfiguration galleryTypeButton:(TextButtonConfiguration * _Nonnull)galleryTypeButton galleryTypeUnderlineColor:(UIColor * _Nonnull)galleryTypeUnderlineColor isPhotoSequenceAnimationEnabled:(BOOL)isPhotoSequenceAnimationEnabled importItemsLabelConfiguration:(TextConfiguration * _Nonnull)importItemsLabelConfiguration bottomViewConfiguration:(BackgroundConfiguration * _Nonnull)bottomViewConfiguration isDraftsHidden:(BOOL)isDraftsHidden visibleTabsInGallery:(NSArray<NSNumber *> * _Nonnull)visibleTabsInGallery OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class SmallActivityIndicatorConfiguration;

/// The Gallery item configuration
SWIFT_CLASS("_TtC15BanubaUtilities24GalleryItemConfiguration")
@interface GalleryItemConfiguration : NSObject
/// Order number background color
@property (nonatomic, strong) UIColor * _Nonnull orderNumberBackgroudColor;
/// Order number title color
@property (nonatomic, strong) UIColor * _Nonnull orderNumberTitleColor;
/// Order number title font
@property (nonatomic, strong) UIFont * _Nonnull orderNumberTitleFont;
/// Image name setups  image for selection indicator
@property (nonatomic, copy) NSString * _Nonnull backgroundSelectionIndicatorImageName;
/// Is selection indicator is hidden
@property (nonatomic) BOOL hideSelectionIndicatorBySelection;
/// TextConfiguration setups duration label configuration
@property (nonatomic, strong) TextConfiguration * _Nonnull durationLabelConfiguration;
/// Duration label background color
@property (nonatomic, strong) UIColor * _Nonnull durationLabelBackgroundColor;
/// SmallActivityIndicatorConfiguration setups activity indicator style
@property (nonatomic, strong) SmallActivityIndicatorConfiguration * _Nonnull activityIndicatorConfiguration;
/// Container’s corner radius
@property (nonatomic) CGFloat cornerRadius;
- (nonnull instancetype)initWithOrderNumberBackgroudColor:(UIColor * _Nonnull)orderNumberBackgroudColor orderNumberTitleColor:(UIColor * _Nonnull)orderNumberTitleColor orderNumberTitleFont:(UIFont * _Nonnull)orderNumberTitleFont backgroundSelectionIndicatorImageName:(NSString * _Nonnull)backgroundSelectionIndicatorImageName hideSelectionIndicatorBySelection:(BOOL)hideSelectionIndicatorBySelection durationLabelConfiguration:(TextConfiguration * _Nonnull)durationLabelConfiguration durationLabelBackgroundColor:(UIColor * _Nonnull)durationLabelBackgroundColor activityIndicatorConfiguration:(SmallActivityIndicatorConfiguration * _Nonnull)activityIndicatorConfiguration cornerRadius:(CGFloat)cornerRadius OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, GalleryItemType, open) {
  GalleryItemTypePhoto = 0,
  GalleryItemTypeVideo = 1,
  GalleryItemTypeUnknown = 2,
};


/// The Gallery layout configuration
SWIFT_CLASS("_TtC15BanubaUtilities26GalleryLayoutConfiguration")
@interface GalleryLayoutConfiguration : NSObject
/// Number of items per row
@property (nonatomic) NSInteger numberOfItemsPerRow;
/// Spacing between items
@property (nonatomic) CGFloat interitemSpacing;
/// Edge insets
@property (nonatomic) UIEdgeInsets edgeInsets;
- (nonnull instancetype)initWithNumberOfItemsPerRow:(NSInteger)numberOfItemsPerRow interitemSpacing:(CGFloat)interitemSpacing edgeInsets:(UIEdgeInsets)edgeInsets OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15BanubaUtilities14GalleryManager")
@interface GalleryManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PHChange;

@interface GalleryManager (SWIFT_EXTENSION(BanubaUtilities)) <PHPhotoLibraryChangeObserver>
- (void)photoLibraryDidChange:(PHChange * _Nonnull)changeInstance;
@end


typedef SWIFT_ENUM(NSInteger, GalleryMediaType, open) {
  GalleryMediaTypeVideo = 0,
  GalleryMediaTypePhoto = 1,
};


/// Setups gallery selection behaviour
SWIFT_CLASS("_TtC15BanubaUtilities25GallerySelectionBehaviour")
@interface GallerySelectionBehaviour : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15BanubaUtilities21GalleryViewController")
@interface GalleryViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP15BanubaUtilities29GalleryViewControllerDelegate_")
@protocol GalleryViewControllerDelegate
/// Tells delegate object about starting asynchronous operations at the gallery.
/// BanubaVideoEditorSDK showing full-screen spinner by this event. It can help to prevent unnecessary actions from a user.
- (void)galleryViewControllerDidStartExport:(GalleryViewController * _Nonnull)controller;
/// Tells delegate object about finishing asynchronous operations at the gallery
- (void)galleryViewControllerDidEndExport:(GalleryViewController * _Nonnull)controller;
/// Tells delegate object about the closing gallery.
- (void)galleryViewControllerDidClose:(GalleryViewController * _Nonnull)controller;
/// Tells delegate object about completion picking gallery items.
- (void)galleryViewControllerDone:(GalleryViewController * _Nonnull)controller withGalleryItems:(NSArray<id <GalleryItem>> * _Nonnull)items;
/// Tells delegate object that a user request changing current album.
- (void)galleryViewControllerDidChangeAlbum:(GalleryViewController * _Nonnull)controller currentAlbum:(id <AlbumModel> _Nullable)currentAlbum;
/// Tells delegate object that he should present message.
/// In BanubaVideoEditorSDK it presents popup message.
- (void)galleryViewController:(GalleryViewController * _Nonnull)controller presentMessage:(NSString * _Nonnull)message;
/// Tells delegate object about the opening Drafts
- (void)galleryViewControllerDidTapDrafts:(GalleryViewController * _Nonnull)controller;
@end


SWIFT_PROTOCOL("_TtP15BanubaUtilities28GalleryViewControllerFactory_")
@protocol GalleryViewControllerFactory <NSObject>
/// Creates GalleryViewController
- (GalleryViewController * _Nonnull)makeGalleryViewControllerWithConfiguration:(GalleryConfiguration * _Nonnull)configuration selectionBehaviour:(GallerySelectionBehaviour * _Nonnull)selectionBehaviour SWIFT_WARN_UNUSED_RESULT;
/// Creates AlbumsViewController
- (AlbumsViewController * _Nonnull)makeAlbumsViewControllerWithConfiguration:(AlbumsConfiguration * _Nonnull)configuration SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtCC15BanubaUtilities35SmallActivityIndicatorConfiguration12GradientType")
@interface GradientType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class GradientColorConfiguration;

@interface GradientType (SWIFT_EXTENSION(BanubaUtilities))
+ (GradientType * _Nonnull)color:(GradientColorConfiguration * _Nonnull)color SWIFT_WARN_UNUSED_RESULT;
+ (GradientType * _Nonnull)image:(id <ImageConfigurationProtocol> _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC15BanubaUtilities8HintView")
@interface HintView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
@end



/// The button with image configuration
SWIFT_PROTOCOL("_TtP15BanubaUtilities32ImageButtonConfigurationProtocol_")
@protocol ImageButtonConfigurationProtocol
/// The default image configuration
@property (nonatomic, strong) id <ImageConfigurationProtocol> _Nonnull imageConfiguration;
/// The selected image configuration
@property (nonatomic, strong) id <ImageConfigurationProtocol> _Nullable selectedImageConfiguration;
@end


/// The image configuration
SWIFT_PROTOCOL("_TtP15BanubaUtilities26ImageConfigurationProtocol_")
@protocol ImageConfigurationProtocol
@property (nonatomic, readonly, strong) UIImage * _Nullable image;
@end



/// The player control configuration.
SWIFT_CLASS("_TtC15BanubaUtilities26PlayerControlConfiguration")
@interface PlayerControlConfiguration : NSObject
/// The play button image name.
@property (nonatomic, copy) NSString * _Nonnull playButtonImageName;
/// The pause button image name.
@property (nonatomic, copy) NSString * _Nonnull pauseButtonImageName;
/// Initializes and returns the player control configuration object with specified configurations.
- (nonnull instancetype)initWithPlayButtonImageName:(NSString * _Nonnull)playButtonImageName pauseButtonImageName:(NSString * _Nonnull)pauseButtonImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



/// The button configuration with rounging settings, text styling and background color configuration.
SWIFT_CLASS("_TtC15BanubaUtilities26RoundedButtonConfiguration")
@interface RoundedButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nullable textConfiguration;
/// The border width configuration.
@property (nonatomic) CGFloat borderWidth;
/// The border color configuration.
@property (nonatomic) CGColorRef _Nonnull borderColor;
/// The corner radius configuration
@property (nonatomic) CGFloat cornerRadius;
/// The background color configuration.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The button width.
/// Default is 30.0
@property (nonatomic) CGFloat width;
/// The button height.
/// Default is 70.0
@property (nonatomic) CGFloat height;
/// Initializes and returns the button configuration object with speicified fields configurations.
- (nonnull instancetype)initWithTextConfiguration:(TextConfiguration * _Nullable)textConfiguration cornerRadius:(CGFloat)cornerRadius backgroundColor:(UIColor * _Nonnull)backgroundColor borderWidth:(CGFloat)borderWidth borderColor:(CGColorRef _Nonnull)borderColor width:(CGFloat)width height:(CGFloat)height OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The save button configuration with text styling and more.
SWIFT_CLASS("_TtC15BanubaUtilities23SaveButtonConfiguration")
@interface SaveButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull textConfiguration;
/// The inactive button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull inactiveTextConfiguration;
/// The button text.
@property (nonatomic, copy) NSString * _Nonnull text;
/// The button width.
@property (nonatomic) CGFloat width;
/// The button height.
@property (nonatomic) CGFloat height;
/// The button corner radius.
@property (nonatomic) CGFloat cornerRadius;
/// The button background color.
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
/// The invactive button background color.
@property (nonatomic, strong) UIColor * _Nonnull inactiveBackgroundColor;
/// Initializes and returns the button configuration object with specified configurations.
- (nonnull instancetype)initWithTextConfiguration:(TextConfiguration * _Nonnull)textConfiguration inactiveTextConfiguration:(TextConfiguration * _Nonnull)inactiveTextConfiguration text:(NSString * _Nonnull)text width:(CGFloat)width height:(CGFloat)height cornerRadius:(CGFloat)cornerRadius backgroundColor:(UIColor * _Nonnull)backgroundColor inactiveBackgroundColor:(UIColor * _Nonnull)inactiveBackgroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIPresentationController;
@protocol UIViewControllerAnimatedTransitioning;
@protocol UIViewControllerInteractiveTransitioning;

SWIFT_CLASS("_TtC15BanubaUtilities26SlideInPresentationManager")
@interface SlideInPresentationManager : NSObject <UIViewControllerTransitioningDelegate>
- (nonnull instancetype)init;
- (UIPresentationController * _Nullable)presentationControllerForPresentedViewController:(UIViewController * _Nonnull)presented presentingViewController:(UIViewController * _Nullable)presenting sourceViewController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForPresentedController:(UIViewController * _Nonnull)presented presentingController:(UIViewController * _Nonnull)presenting sourceController:(UIViewController * _Nonnull)source SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerAnimatedTransitioning> _Nullable)animationControllerForDismissedController:(UIViewController * _Nonnull)dismissed SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
- (id <UIViewControllerInteractiveTransitioning> _Nullable)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning> _Nonnull)animator SWIFT_WARN_UNUSED_RESULT;
@end


/// The activity indicator configuration.
SWIFT_CLASS("_TtC15BanubaUtilities35SmallActivityIndicatorConfiguration")
@interface SmallActivityIndicatorConfiguration : NSObject
/// The gradient type.
@property (nonatomic, strong) GradientType * _Nonnull gradientType;
/// The activity indicator line width.
@property (nonatomic) CGFloat activityLineWidth;
/// Initializes and returns the activity indicator configuration object with specified configurations.
- (nonnull instancetype)initWithGradientType:(GradientType * _Nonnull)gradientType activityLineWidth:(CGFloat)activityLineWidth OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// The gradient type.
typedef SWIFT_ENUM(NSInteger, GradientTypeAdapter, open) {
  GradientTypeAdapterColor = 0,
  GradientTypeAdapterImage = 1,
};



/// The gradient configuration.
SWIFT_CLASS("_TtCC15BanubaUtilities35SmallActivityIndicatorConfiguration26GradientColorConfiguration")
@interface GradientColorConfiguration : NSObject
/// The gradient angle.
@property (nonatomic) CGFloat angle;
/// The gradient colors.
@property (nonatomic, copy) NSArray<UIColor *> * _Nonnull colors;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The button configuration with text styling and text.
SWIFT_CLASS("_TtC15BanubaUtilities23TextButtonConfiguration")
@interface TextButtonConfiguration : NSObject
/// The button text configuration.
@property (nonatomic, strong) TextConfiguration * _Nonnull style;
/// The button text.
@property (nonatomic, copy) NSString * _Nullable text;
/// Initializes and returns the button configuration object with text style and optional text.
- (nonnull instancetype)initWithStyle:(TextConfiguration * _Nonnull)style text:(NSString * _Nullable)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class TextShadowConfiguration;

/// The text configuration
SWIFT_CLASS("_TtC15BanubaUtilities17TextConfiguration")
@interface TextConfiguration : NSObject
/// The kerning of the text.
/// Default is 0
@property (nonatomic) double kern;
/// The font of the text.
@property (nonatomic, strong) UIFont * _Nonnull font;
/// The color of the text.
@property (nonatomic, strong) UIColor * _Nonnull color;
/// The alignment of the text.
/// Default is .center
@property (nonatomic) NSTextAlignment alignment;
/// The optional text
@property (nonatomic, copy) NSString * _Nullable text;
/// The optional shadow
@property (nonatomic, strong) TextShadowConfiguration * _Nullable shadow;
/// Initializes and returns the text configuration object with speicified fields.
- (nonnull instancetype)initWithKern:(double)kern font:(UIFont * _Nonnull)font color:(UIColor * _Nonnull)color alignment:(NSTextAlignment)alignment text:(NSString * _Nullable)text shadow:(TextShadowConfiguration * _Nullable)shadow OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSShadow;

/// The shadow button configuration.
SWIFT_CLASS("_TtC15BanubaUtilities23TextShadowConfiguration")
@interface TextShadowConfiguration : NSObject
/// The shadow color configuration.
@property (nonatomic, strong) UIColor * _Nonnull shadowColor;
/// The shadowOffset configuration.
@property (nonatomic) CGSize shadowOffset;
/// The shadowBlurRadius configuration.
@property (nonatomic) CGFloat shadowBlurRadius;
/// Initializes and returns the shadow configuration.
- (nonnull instancetype)initWithShadowColor:(UIColor * _Nonnull)shadowColor shadowOffset:(CGSize)shadowOffset shadowBlurRadius:(CGFloat)shadowBlurRadius OBJC_DESIGNATED_INITIALIZER;
/// Apply the shadow configuration.
- (NSShadow * _Nonnull)shadow SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







SWIFT_CLASS("_TtC15BanubaUtilities28VideoEditorActivityIndicator")
@interface VideoEditorActivityIndicator : UIView
@property (nonatomic) CGRect bounds;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, VideoResolution, open) {
  VideoResolutionHd1280x720 = 0,
  VideoResolutionHd1920x1080 = 1,
  VideoResolutionMd960x540 = 2,
  VideoResolutionDefault854x480 = 3,
};


/// The video resolution configuration
SWIFT_CLASS("_TtC15BanubaUtilities28VideoResolutionConfiguration")
@interface VideoResolutionConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
